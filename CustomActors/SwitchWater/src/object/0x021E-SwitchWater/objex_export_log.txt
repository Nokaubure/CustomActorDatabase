WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'Z:\\OoTmodding\\zelda\\z64rom_musictest\\src\\object\\0x021E-SwitchWater\\switchwater.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating waterplane, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0026 sec |   0.0021 sec) Finished writing geometry of 'waterplane'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0047 sec |   0.0041 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06000890' name_q='"mtl_06000890"' material=<bpy_struct, Material("mtl_06000890") at 0x000001DA51763A08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000001DA51926408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000001DA6210E208, evaluated>, 'G_ACMUX_1': <bpy_struct, NodeSocketColor("1") at 0x000001DA51926608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000001DA51926408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210D208, evaluated>, 'G_CCMUX_TEXEL1': <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210CC08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210C808, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x000001DA6210E208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000001DA6210E208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000001DA5219ACC8, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210C808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000001DA5219A948, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel1RGB from <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210CC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel1") at 0x000001DA5219A788, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000001DA6210D208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000001DA5219A5C8, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.5, 'texel0RGB': {'image': bpy.data.images['RGBA16_06000890.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel1RGB': {'image': bpy.data.images['RGBA16_06000890.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture RGBA16_06000890.tga <bpy_struct, Image("RGBA16_06000890.tga") at 0x000001DA51BA0108>
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0096 sec |   0.0091 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0101 sec |   0.0096 sec) Objex Export Finished
