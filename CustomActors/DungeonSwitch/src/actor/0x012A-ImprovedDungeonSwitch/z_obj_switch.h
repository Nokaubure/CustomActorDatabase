#ifndef Z_OBJ_SWITCH_H
#define Z_OBJ_SWITCH_H

#include "ultra64.h"
#include "global.h"

struct ObjSwitch;

typedef void (*ObjSwitchActionFunc)(struct ObjSwitch*, PlayState*);

typedef enum {
    /* 0 */ OBJSWITCH_TYPE_FLOOR,
    /* 1 */ OBJSWITCH_TYPE_FLOOR_RUSTY,
    /* 2 */ OBJSWITCH_TYPE_EYE,
    /* 3 */ OBJSWITCH_TYPE_CRYSTAL,
    /* 4 */ OBJSWITCH_TYPE_CRYSTAL_TARGETABLE,
    /* 5 */ OBJSWITCH_TYPE_CRYSTAL2,
    /* 6 */ OBJSWITCH_TYPE_CRYSTAL2_TARGETABLE,
} ObjSwitchType;

typedef enum {
    /* 0 */ OBJSWITCH_SUBTYPE_ONCE,             // Switches that can only be turned on (On -> Flag Set)
    /* 1 */ OBJSWITCH_SUBTYPE_TOGGLE,           // Switches that can be turned on and off (On -> Flag Set, Off -> Flag Cleared)
    /* 2 */ OBJSWITCH_SUBTYPE_HOLD,             // Floor Types only, released when not stood on (Down -> Flag Set, Up -> Flag Cleared)
    /* 3 */ OBJSWITCH_SUBTYPE_HOLD_INVERTED,    // Floor Types only, unused, inverted Switch Flag behavior (Down -> Flag Cleared, Up -> Flag Set)
    /* 4 */ OBJSWITCH_SUBTYPE_SYNC              // Crystal Types only, syncs with the Switch Flag (On -> Flag Set, Off -> Flag Cleared)
} ObjSwitchSubType;

typedef struct {
    /* 0x00 */ ColliderJntSph col;
    /* 0x20 */ ColliderJntSphElement items[1];
} ObjSwitchJntSph;

typedef struct {
    /* 0x00 */ ColliderTris col;
    /* 0x20 */ ColliderTrisElement items[2];
} ObjSwitchTris;

typedef struct ObjSwitch {
    /* 0x0000 */ DynaPolyActor dyna;
    /* 0x0164 */ ObjSwitchActionFunc actionFunc;
    /* 0x0168 */ s16 releaseTimer; // used for SUBTYPE_HOLD and SUBTYPE_HOLD_INVERTED
    /* 0x016A */ s16 disableAcTimer;
    /* 0x016C */ s16 cooldownTimer;
    /* 0x016E */ u8 cooldownOn;
    /* 0x0170 */ s16 eyeTexIndex;
    /* 0x0174 */ void* crystalSubtype1texture;
    /* 0x0178 */ u8 x1TexScroll;
    /* 0x0179 */ u8 y1TexScroll;
    /* 0x017A */ u8 x2TexScroll;
    /* 0x017B */ u8 y2TexScroll;
    /* 0x017C */ Color_RGB8 crystalColor;
    /* 0x017F */ u8 unk_17F;
                 u8 pressed;//multiswitch check
    union {
        /* 0x0180 */ ObjSwitchJntSph jntSph;
        /* 0x0180 */ ObjSwitchTris tris;
    };
                 u8 alternate;
} ObjSwitch; // size = 0x0258

u32 gCrstalSwitchGreenTex[] = {
0x04C90407, 0x044703C7, 0x040705C9, 0x04C90407,
0x0447060B, 0x070B05C9, 0x04870447, 0x04870509,
0x05C9064B, 0x05C905C9, 0x04470487, 0x04470487,
0x04870447, 0x04470447, 0x048705C9, 0x05C9068B,
0x04470447, 0x04070407, 0x05C905C9, 0x04870509,
0x078D1FD3, 0x068B0509, 0x04470447, 0x0509060B,
0x05C90509, 0x05C9060B, 0x04C90509, 0x04870509,
0x044703C7, 0x04870487, 0x04470487, 0x04C9060B,
0x05090509, 0x04870487, 0x050904C9, 0x05C907CD,
0x17D1074D, 0x07CD070B, 0x068B070B, 0x070B06CB,
0x068B05C9, 0x05C904C9, 0x04870447, 0x050905C9,
0x04870487, 0x050904C9, 0x04470407, 0x03850447,
0x04C905C9, 0x05C9060B, 0x04C90589, 0x07CF07CD,
0x06CB060B, 0x068B064B, 0x060B0509, 0x04C90487,
0x05C9064B, 0x060B0589, 0x04870407, 0x04470487,
0x04C90549, 0x04870447, 0x04070407, 0x04070407,
0x04C905C9, 0x078D07CD, 0x070B17D1, 0x068B0487,
0x04470509, 0x064B060B, 0x05C90509, 0x04070447,
0x050904C9, 0x05090549, 0x05090487, 0x04470447,
0x04470487, 0x04C903C7, 0x038503C7, 0x044704C9,
0x060B1FD3, 0x17D11FD3, 0x1FD3068B, 0x054905C9,
0x04870487, 0x04C905C9, 0x060B0509, 0x03C70447,
0x04870549, 0x04470447, 0x044704C9, 0x05090447,
0x04470447, 0x048703C7, 0x03C70407, 0x04470447,
0x078D068B, 0x064B064B, 0x07CD068B, 0x060B05C9,
0x04C904C9, 0x05090589, 0x054904C9, 0x04C90509,
0x05C904C9, 0x044703C7, 0x03C70407, 0x04470447,
0x04470447, 0x04470407, 0x044704C9, 0x050905C9,
0x05090509, 0x050904C9, 0x04870509, 0x060B05C9,
0x050905C9, 0x054905C9, 0x060B060B, 0x060B060B,
0x060B0509, 0x04470385, 0x038503C7, 0x044703C7,
0x04470447, 0x04470407, 0x048705C9, 0x068B068B,
0x04870487, 0x050905C9, 0x05490487, 0x0549060B,
0x05C9074D, 0x074D068B, 0x068B064B, 0x05C905C9,
0x068B068B, 0x05090447, 0x040703C7, 0x02C503C7,
0x04470487, 0x04470509, 0x05C905C9, 0x04870447,
0x04870447, 0x044704C9, 0x050904C9, 0x06CB06CB,
0x064B064B, 0x068B064B, 0x054905C9, 0x060B060B,
0x05C917D1, 0x06CB068B, 0x044703C7, 0x03C703C7,
0x05C9068B, 0x04870509, 0x05890447, 0x04070487,
0x04470487, 0x04470487, 0x044705C9, 0x068B0509,
0x04470487, 0x05090589, 0x05C905C9, 0x0509060B,
0x06CB068B, 0x05C906CB, 0x05C90487, 0x04870509,
0x074D068B, 0x068B068B, 0x04870447, 0x03C70407,
0x03C70447, 0x04470447, 0x0549060B, 0x04870487,
0x04C904C9, 0x04870447, 0x05090487, 0x054905C9,
0x06CB0487, 0x04470549, 0x060B068B, 0x07CF17D1,
0x068B05C9, 0x07CD070B, 0x04470447, 0x03C703C7,
0x03850407, 0x0487060B, 0x060B0407, 0x04870487,
0x05090509, 0x05C9068B, 0x068B060B, 0x068B07CD,
0x074D0487, 0x03C703C7, 0x04470487, 0x068B060B,
0x0487060B, 0x074D0509, 0x058904C9, 0x04470447,
0x05C9068B, 0x07CD060B, 0x044703C7, 0x04C905C9,
0x064B0589, 0x0487060B, 0x060B0589, 0x05C9060B,
0x05C9060B, 0x05490447, 0x0509060B, 0x064B05C9,
0x060B074D, 0x064B0509, 0x048705C9, 0x05C905C9,
0x06CB064B, 0x04C90447, 0x04470509, 0x05C9060B,
0x060B0549, 0x05C90549, 0x04470487, 0x04470509,
0x044704C9, 0x060B060B, 0x05C90447, 0x0509060B,
0x070B07CD, 0x064B0509, 0x048704C9, 0x048705C9,
0x04C90487, 0x04870447, 0x050905C9, 0x05C904C9,
0x054905C9, 0x05C90447, 0x04470487, 0x04470509,
0x05090509, 0x068B068B, 0x060B060B, 0x060B064B,
0x07CD068B, 0x064B0549, 0x04870447, 0x04870487,
0x04C90487, 0x04C90487, 0x050904C9, 0x0509060B,
0x060B068B, 0x068B068B, 0x058905C9, 0x06CB068B,
0x068B078D, 0x07CF068B, 0x05C9060B, 0x05C907CF,
0x17D1068B, 0x05C905C9, 0x058904C9, 0x04C90487,
0x05C90487, 0x04870487, 0x04870487, 0x05C906CB,
0x06CB07CD, 0x27D507CF, 0x078D1FD3, 0x1FD306CB,
0x078D074D, 0x07CD070B, 0x06CB06CB, 0x07CD27D5,
0x06CB05C9, 0x060B0589, 0x05090487, 0x04470509,
0x05090447, 0x04470447, 0x0549070B, 0x1FD3068B,
0x068B068B, 0x0509060B, 0x06CB074D, 0x064B0589,
0x074D070B, 0x07CD06CB, 0x074D074D, 0x17D106CB,
0x050905C9, 0x058904C9, 0x04870447, 0x04470589,
0x060B0549, 0x064B07CD, 0x07CD06CB, 0x064B060B,
0x060B0447, 0x04470447, 0x048704C9, 0x05C90509,
0x064B060B, 0x1FD31FD3, 0x074D070B, 0x078D0509,
0x050905C9, 0x05890447, 0x04470447, 0x0509060B,
0x068B0447, 0x05890549, 0x04470487, 0x05890509,
0x05C90447, 0x04070407, 0x04470487, 0x050905C9,
0x060B060B, 0x074D068B, 0x05890549, 0x074D05C9,
0x05C90509, 0x060B04C9, 0x04470447, 0x06CB06CB,
0x04470447, 0x04470447, 0x0487060B, 0x04870447,
0x04470447, 0x04470407, 0x04070447, 0x04870509,
0x05C90589, 0x05090509, 0x05C906CB, 0x2FD51FD3,
0x07CD070B, 0x068B060B, 0x068B074D, 0x05090447,
0x04470487, 0x04470487, 0x0589060B, 0x05090487,
0x03C703C7, 0x04470447, 0x03C703C7, 0x04470487,
0x05490589, 0x0549060B, 0x074D17D1, 0x37D71FD3,
0x27D51FD3, 0x1FD327D5, 0x27D5068B, 0x05890447,
0x05C904C9, 0x04470447, 0x04870509, 0x04C90447,
0x04470407, 0x04470407, 0x04070487, 0x04870509,
0x05C905C9, 0x068B07CF, 0x07CF074D, 0x068B074D,
0x070B068B, 0x05C9070B, 0x17D1068B, 0x060B0487,
0x04870447, 0x04C904C9, 0x044704C9, 0x04870447,
0x04470447, 0x04470447, 0x04870589, 0x05090589,
0x060B068B, 0x0FCF070B, 0x068B0549, 0x05C9068B,
0x06CB06CB, 0x06CB078D, 0x074D078D, 0x068B05C9,
0x05C90487, 0x04870487, 0x048704C9, 0x04470487,
0x044703C7, 0x04470487, 0x04C90509, 0x0589064B,
0x070B1FD3, 0x070B060B, 0x060B04C9, 0x050905C9,
0x060B06CB, 0x070B078D, 0x074D060B, 0x060B078D,
0x070B05C9, 0x04870549, 0x060B06CB, 0x05C904C9,
0x04470487, 0x04470447, 0x05C905C9, 0x05C906CB,
0x07CF06CB, 0x068B0509, 0x04870509, 0x05490487,
0x054906CB, 0x064B068B, 0x07CD064B, 0x05C905C9,
0x070B17D1, 0x07CD1FD3, 0x074D060B, 0x05C9060B,
0x05090549, 0x04470447, 0x0509074D, 0x074D068B,
0x064B060B, 0x060B05C9, 0x04870509, 0x058905C9,
0x070B17D1, 0x27D51FD3, 0x068B05C9, 0x060B060B,
0x06CB06CB, 0x07CF070B, 0x05090447, 0x048704C9,
0x0509068B, 0x05C9064B, 0x07CD06CB, 0x05090589,
0x054905C9, 0x05090589, 0x05090447, 0x0549078D,
0x068B064B, 0x068B06CB, 0x068B068B, 0x074D074D,
0x05C905C9, 0x05C904C9, 0x05490407, 0x04870589,
0x04C905C9, 0x068B0FCF, 0x068B0509, 0x05090487,
0x07CD07CF, 0x064B0509, 0x05C905C9, 0x06CB0407,
0x040704C9, 0x054905C9, 0x060B05C9, 0x06CB074D,
0x050905C9, 0x05C90447, 0x04470487, 0x04470447,
0x050905C9, 0x064B06CB, 0x050904C9, 0x0487078D,
0x07CF17D1, 0x1FD317D1, 0x17D107CD, 0x040703C7,
0x04470487, 0x054904C9, 0x04C90447, 0x068B068B,
0x04870447, 0x04470407, 0x03850549, 0x04870407,
0x044704C9, 0x074D064B, 0x05C90447, 0x048704C9,
0x068B074D, 0x068B068B, 0x064B0509, 0x04470447,
0x04870487, 0x04870447, 0x048704C9, 0x064B06CB
};

#endif
